= rask

* http://github.com/mewlist/Rask

== DESCRIPTION:
 
 Rask を使うと、タスク処理をシンプルに記述できます。
 
 タスクの実行状態が自動的に永続化されるので、
 タスクの中断、復帰が容易です。
 これらの処理は、web のように処理がまばらな環境での利用を想定しています。
 また、膨大な時間がかかる計算処理などでの利用も考えられます。
 
 
 
== FEATURES/PROBLEMS:

* シンプルなステートマシンの記述 (Act As State Machine と似てる)
* タスク状態の永続化
* デーモン起動によるブロッキング回避
  * たとえば、webなんかだとタイムアウト回避処理が容易に記述できる
  * webビデオエンコーダとか、サイトの大量メール配信とか
  * デーモンが落ちても永続化されているので処理の途中から復帰可能(いろいろ問題はありそうだけども)
* 永続化はMarshal使っているだけなので drb 組み合わせて、強力な web のバックエンド構築ができる気がするが試していない

== SYNOPSIS:

* タスクの定義 (countup.rb)
 require 'rubygems'
 require 'rask'
 #
 # 数値のカウントアップ 10 までカウントする
 # タスクの定義
 #
 class CountupTask < Rask::Task
   define_state :start,   :initial => true       # 初期状態
   define_state :running                         # 実行
   define_state :finish,  :from    => [:running] # 終了 (遷移元は:runningからのみ)
   
   def start
     @count = 0
     p "start"
     transition_to_running # :running へ遷移
   end
   
   def running
     p "running count => #{@count+=1}"
     transition_to_finish if @count>=10 # :finish へ遷移
   end
   
   def finish
     p "finished"
     destroy # タスクの破棄
   end
 end
 
 
 # タスクを動かす
 if __FILE__ == $0
   task = CountupTask.new # タスクの作成
   Rask.insert task       # タスクの登録
 end
 
 
* タスクを実行するデーモン(daemon.rb)
 require 'rubygems'
 require 'rask'
 
 require 'countup.rb'
 
 # バックグラウンドタスクの実行
 Rask.daemon(:sleep=>0.1)


デーモンの起動

 $ ruby daemon.rb


デーモンを実行しておくと、Rask.insert を行うだけで
タスクが自動的に実行されていきます。

 $ ruby countup.rb

== REQUIREMENTS:

 ruby1.8.7で作ってる

== INSTALL:

 gem install rask

== LICENSE:

 (The MIT License)
 
 Copyright (c) 2010 mewlist / Hidenori Doi
 
 Permission is hereby granted, free of charge, to any person obtaining
 a copy of this software and associated documentation files (the
 'Software'), to deal in the Software without restriction, including
 without limitation the rights to use, copy, modify, merge, publish,
 distribute, sublicense, and/or sell copies of the Software, and to
 permit persons to whom the Software is furnished to do so, subject to
 the following conditions:
 
 The above copyright notice and this permission notice shall be
 included in all copies or substantial portions of the Software.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
